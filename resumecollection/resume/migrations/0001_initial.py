# Generated by Django 3.0.10 on 2020-09-21 14:43

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('taggit', '0003_taggeditem_add_unique_index'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CandidateProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_updated_at', models.DateTimeField(auto_now=True)),
                ('first_name', models.CharField(max_length=25)),
                ('middle_name', models.CharField(blank=True, max_length=25, null=True)),
                ('last_name', models.CharField(max_length=25)),
                ('resume', models.FileField(upload_to='resume/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf', 'docx'])])),
                ('added_by', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ContactDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_updated_at', models.DateTimeField(auto_now=True)),
                ('phone_number', models.CharField(blank=True, max_length=20, null=True)),
                ('email', models.CharField(max_length=100)),
                ('address', models.CharField(blank=True, max_length=200, null=True)),
                ('linked_in', models.URLField(blank=True, null=True)),
                ('github', models.URLField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Education',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_updated_at', models.DateTimeField(auto_now=True)),
                ('degree', models.CharField(max_length=100)),
                ('institute', models.CharField(max_length=100)),
                ('from_date', models.DateField(blank=True, null=True)),
                ('to_date', models.DateField(blank=True, null=True)),
                ('description', models.CharField(max_length=100)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Experience',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_updated_at', models.DateTimeField(auto_now=True)),
                ('position', models.CharField(max_length=100)),
                ('company', models.CharField(max_length=100)),
                ('from_date', models.DateField(blank=True, null=True)),
                ('to_date', models.DateField(blank=True, null=True)),
                ('description', models.CharField(max_length=100)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TaggedSkills',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_object', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='resume.CandidateProfile')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='resume_taggedskills_items', to='taggit.Tag')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TaggedGenerals',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_object', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='resume.CandidateProfile')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='resume_taggedgenerals_items', to='taggit.Tag')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='candidateprofile',
            name='contact_detail',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='resume.ContactDetail'),
        ),
        migrations.AddField(
            model_name='candidateprofile',
            name='education',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='resume.Education'),
        ),
        migrations.AddField(
            model_name='candidateprofile',
            name='experience',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='resume.Experience'),
        ),
        migrations.AddField(
            model_name='candidateprofile',
            name='generals',
            field=taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', related_name='generals', through='resume.TaggedGenerals', to='taggit.Tag', verbose_name='Generals'),
        ),
        migrations.AddField(
            model_name='candidateprofile',
            name='reference',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='resume.CandidateProfile'),
        ),
        migrations.AddField(
            model_name='candidateprofile',
            name='skills',
            field=taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', related_name='skills', through='resume.TaggedSkills', to='taggit.Tag', verbose_name='Skills'),
        ),
    ]
